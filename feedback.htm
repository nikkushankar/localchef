<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="shortcut icon" type="image/x-icon" href="chefs-hat.svg">
        <link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">
        <script src="https://www.funxion.io:9443/auth/js/keycloak.js"></script>
        <title>LocalChef</title>
    </head>

    <body>
        <header class="text-gray-600 body-font">
            <div class="container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center">
              <a class="flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-10 h-10 text-white p-2 bg-green-500 rounded-full" viewBox="0 0 24 24">
                  <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>
                </svg>
                <span class="ml-3 text-xl"><a href="index.htm">LocalChef</a></span>
              </a>              
            </div>
          </header>
          <section class="text-gray-600 body-font relative" id="contact">
            <div class="container px-5 py-24 mx-auto">
              <form action="https://api.web3forms.com/submit" method="POST" id="form">

              <div class="flex flex-col text-center w-full mb-12">
                <h1 class="sm:text-3xl text-2xl font-medium title-font mb-4 text-gray-900">Contact Us</h1>
                <p class="lg:w-2/3 mx-auto leading-relaxed text-base">We will be happy to resolve your queries! Mail us and our team will be in touch with you shortly.</p>
              </div>
              <div class="lg:w-1/2 md:w-2/3 mx-auto">
                <div class="flex flex-wrap -m-2">
                  <div class="p-2 w-1/2">
                    <div class="relative">
                      <label for="name" class="leading-7 text-sm text-gray-600">Name</label>
                      <input type="text" id="name" name="name" class="w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out">
                    </div>
                  </div>
                  <div class="p-2 w-1/2">
                    <div class="relative">
                      <label for="email" class="leading-7 text-sm text-gray-600">Email</label>
                      <input type="email" id="email" name="email" class="w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out">
                    </div>
                  </div>
                  <div class="p-2 w-full">
                    <div class="relative">
                      <label for="message" class="leading-7 text-sm text-gray-600">Message</label>
                      <textarea id="message" name="message" class="w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 h-32 text-base outline-none text-gray-700 py-1 px-3 resize-none leading-6 transition-colors duration-200 ease-in-out"></textarea>
                    </div>
                  </div>
                  <div class="p-2 w-full">
                    <button class="flex mx-auto text-white bg-green-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg">Send</button>
                  </div>
                  <div class="p-2 w-full pt-8 mt-8 border-t border-gray-200 text-center">
                    
                  </div>
                </div>
              </div>
              </form>
            </div>
          </section>
          <hr>
          <section>
            <div class="bg-gray-100">
                <div class="container mx-auto py-4 px-5 flex flex-wrap flex-col sm:flex-row">
                  <p class="text-gray-500 text-sm text-center sm:text-left">Â©2021 LocalChef.me </p>
                  <span class="sm:ml-auto sm:mt-0 mt-2 sm:w-auto w-full sm:text-left text-center text-gray-500 text-sm">All Rights Reserved</span>
                </div>
              </div>
            </footer>
          </section>
          <script>
            const form = document.getElementById('form');
            const result = document.getElementById('result');
            
            form.addEventListener('submit', function(e) {
                const formData = new FormData(form);
                e.preventDefault();
                var object = {};
                formData.forEach((value, key) => {
                    object[key] = value
                });
                var json = JSON.stringify(object);
                result.innerHTML = "Please wait..."
                //http://localhost:8081/contactform
                fetch('https://api.funxion.io/contactform', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: json
                    })
                    .then(async (response) => {
                        let json = await response.json();
                        if (response.status == 200) {
                            console.log(json.message);
                            result.innerHTML = json.message;
                             result.classList.remove('text-gray-500');
                            result.classList.add('text-green-500');
                        } else {
                            console.log(response);
                            result.innerHTML = json.message;
                             result.classList.remove('text-gray-500');
                             result.classList.add('text-red-500');
                        }
                    })
                    .catch(error => {
                        console.log(error);
                        result.innerHTML = "Something went wrong!";
                    })
                    .then(function() {
                        form.reset();
                        setTimeout(() => {
                            result.style.display = "none"; 
                        }, 5000);
                    });
            })
            </script>
		          <script type="text/javascript">

                let initOptions = {
                  url: 'https://www.funxion.io:9443/auth' , realm: 'quarkus', clientId: 'frontend', onLoad: 'login-required'
                }
                
                let keycloak = Keycloak(initOptions);
                window.keycloak = keycloak;
                keycloak.init({ onLoad: initOptions.onLoad }).then((auth) => {
                  if (!auth) {
                  window.location.reload();
                  }
                
                  let payload = {
                  idToken: keycloak.idToken,
                  accessToken: keycloak.token
                  }
                
                  if ((keycloak.token && keycloak.idToken) != '' && (keycloak.idToken != '')) {
                  console.log("--> log: User has logged in: " + keycloak.subject);
                  console.log("--> log: TokenParsed: "+ JSON.stringify(keycloak.tokenParsed));
                  console.log("--> log: User name: " + keycloak.tokenParsed.preferred_username);
                  console.log("--> log: accessToken: " + payload.accessToken);
                  console.log("--> log: idToken: " + payload.idToken);
                  payload = {
                    name: keycloak.tokenParsed.preferred_username
                  };
                  }
                  else {
                  payloadRefreshedTokens = {
                    idToken: "",
                    accessToken: ""
                  }
                  }
                }).catch(() => {
                  console.log("-->log: Failed to authenticate");
                });
                
                setInterval(() => {
                        window.keycloak.updateToken(70)
                          .then(refreshed => {
                            if (refreshed) {
                              console.info('Token refreshed' + refreshed);
                            } else {
                              console.warn('Token not refreshed, valid for '
                                + Math.round(window.keycloak.tokenParsed.exp + window.keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');
                            }
                          })
                          .catch(error => console.error(error));
                      }, 6000)
                
                
                    </script>
</body>
</html>